$(function(){"use strict";var t=function(){$('.js-alias-widget[data-initialized="false"]').each(function(t,a){var n=$(this);var e=n.find('input[type="hidden"]').first();var r=e.attr("value");var s=null;if($.trim(r)===""){s=[]}else{s=r.split("\n")}for(var l=0;l<s.length;l=l+1){var v=s[l];i(n,v)}n.removeAttr("data-initialized")})};var i=function(t,i){var a=t.find(".template");var n=a.clone();n.find(".text").text(i);t.append(n.children())};t();$(document).ajaxStop(function(i){t()});function a(t){var a=t.parents(".js-alias-widget").first();var n=a.find('input[type="hidden"]').first();var e=n.attr("value");var r=null;if($.trim(e)===""){r=[]}else{r=e.split("\n")}var s=t.val();if(s.indexOf("\n")>=0){alert("Alias can not contain newlines character.");return}var l=$.inArray(s,r);if($.trim(s)===""||l!==-1){t.val("");return}r.push(s);var v=r.join("\n");n.attr("value",v);i(a,s);t.val("")}$(document).on("click",".js-alias-widget-button",function(t){var i=$(this).siblings(".js-alias-widget-input");t.preventDefault();a(i)});$(document).on("keydown",".js-alias-widget-input",function(t){var i=$(this);if(t.which===13){t.preventDefault();a(i)}});$(document).on("click",".js-alias-widget .js-alias-widget-remove, .js-alias-widget svg",function(t){var i=$(this);var a=i.parents(".js-alias-widget").first();var n=a.find('input[type="hidden"]').first();var e=i.parents(".wiki-list-item").first();var r=e.find(".text").text().trim();var s=n.attr("value").trim();if(s==""){n.val("")}else{var l=s.split("\n");var v=l.filter(function(t){return t.trim()!=r});n.val(v.join("\n"))}e.remove()})});
$(function(){"use strict";var t=false;$(".js-add-to-user-list").on("click",function(i){$("#modal_add_to_list").modal("show");if(!t){AjaxApiRequest.makeGetApiRequest("/api/list/paginated-lists/",function(t){if(t.success){$("#modal_add_to_list .loading").remove();$("#modal_add_to_list .js-simple-paginator-container").html(t.html)}else{Phoenix.Ui.showErrorMessage("Could not load lists");$("#modal_add_to_list").modal("hide")}},function(){Phoenix.Ui.showErrorMessage("Could not load lists");$("#modal_add_to_list").modal("hide")});t=true}i.preventDefault()});$("#modal_add_to_list").on("click","tr.js-add-list",function(t){var i=$("#modal_add_to_list table").data("object-guid");var o=$(t.target);if(!o.is("tr")){o=o.parents("tr")}var a=o.attr("data-ref-id");AjaxApiRequest.makeGetApiRequest("/api/list/"+a+"/add-item/"+i+"/",function(t){if(t.success){Phoenix.Ui.showSuccessMessage("Successfully added item to list.");$("#modal_add_to_list").modal("hide")}else{Phoenix.Ui.showErrorMessage("Error while adding object to list.");$("#modal_add_to_list").modal("hide")}},function(){Phoenix.Ui.showErrorMessage("Error while adding object to list.");$("#modal_add_to_list").modal("hide")})})});
(function(e){"use strict";var t=e.Phoenix,n,i;if(!t){e.Phoenix=t={}}n=t.Wiki=t.Wiki||{};n.Models=n.Models||{};i=n.Models.Changeset=Backbone.Model.extend({urlRoot:"/api/wiki/changeset/",pendingXHR:null,rollbackCallback:null,url:function(){return this.urlRoot+this.id+"/"},defaults:{entityName:"New Entity"},initialize:function(e){},fetch:function(e){if(this.pendingXHR&&this.pendingXHR.abort){this.pendingXHR.abort()}this.pendingXHR=Backbone.Model.prototype.fetch.call(this,e);return this.pendingXHR},parse:function(e){var t=null;if(e.result){t=e.result}else{t=e}t.changes=new n.Collections.Changes(t.changes);this.handleChangeCollectionEvent(t.changes);return t},toJSON:function(e){var t=Backbone.Model.prototype.toJSON.call(this,e);t.totalPoints=this.getPointsSum();t.parentChangesLength=this.getParents().length;return t},set:function(e,t){if(e.changes!==undefined&&!(e.changes instanceof n.Collections.Changes)){e.changes=new n.Collections.Changes(e.changes);this.handleChangeCollectionEvent(e.changes)}return Backbone.Model.prototype.set.call(this,e,t)},submit:function(e,t){return this.save({comment:e},_.extend({type:"POST",error:_.bind(n.Util.saveError,this)},t))},comment:function(e,i,s,r){var r=r||{};try{i=parseInt(i)}catch(e){i=0}if(r.error){r.error=function(){r.error();_.bind(n.Util.saveError,this)}}this.save({comment:e,points:i,sendToUser:s},_.extend({type:"PUT",error:_.bind(n.Util.saveError,this)},r)).success(function(e){t.Ui.showSuccessMessage("Comment Successfully Added",{})})},approveAll:function(e){this.save({action:"approve"},_.extend({type:"PUT",error:_.bind(n.Util.saveError,this)},{url:this.url()+"moderate/"})).success(function(n){t.Ui.showSuccessMessage("Remaining Changes Approved",{});if(e){e()}})},denyAll:function(e){this.save({action:"deny"},_.extend({type:"PUT",error:_.bind(n.Util.saveError,this)},{url:this.url()+"moderate/"})).success(function(n){t.Ui.showSuccessMessage("Remaining Changes Denied",{});if(e){e()}})},handleChangeCollectionEvent:function(e){e.on("change reset add remove",function(){this.trigger("reset");if(e.length>=1&&e.first().get("parentChange")&&!this.getChange(e.first().get("parentChange").id)){this.removeChange(e.first().get("id"))}if(e.length===0){this.trigger("destroy",this)}},this)},getPointsSum:function(){var e=0;this.get("changes").each(function(t){var n=t.get("points");e+=n>0?n:0});return e},getChange:function(e){return this.get("changes").findWhere({id:parseInt(e)})},getChangeByField:function(e,t){var n={fieldName:e};if(t){n.newValue=t.toString()}if(this.get("changes")){return this.get("changes").findWhere(n)}},getChangeByValue:function(e,t){return this.get("changes").findWhere({action:t,newValue:e.toString()})},getChildren:function(e){return _.filter(this.get("changes").models,function(t){var n=t.get("parentChange");return n&&n.id===e})},getParents:function(){return _.filter(this.get("changes").models,function(e){var t=e.get("parentChange");if(!t){return e}})},getParentsByStatus:function(e){return _.filter(this.get("changes").models,function(t){var n=t.get("parentChange");var i=t.get("status");if(!n&&i===e||n&&i===e&&n.status!==e){return t}})},hasPendingChange:function(){return this.get("changes").findWhere({status:"pending"})!==undefined},removeChange:function(e,t){this.getChange(e).destroy(null,t)},getChangesByStatus:function(e){return this.get("changes").where({status:e})}})})(this);
(function(t){"use strict";var e=t.Phoenix,i,n;if(!e){t.Phoenix=e={}}i=e.Wiki=e.Wiki||{};i.Collections=i.Collections||{};n=i.Collections.Changesets=Backbone.Collection.extend({model:i.Models.Changeset,fetchData:{status:"incomplete"},baseUrl:"/api/wiki/changesets/",url:function(){return this.baseUrl+(i.mode==="mod"?"all/?id="+this.activeChangeset.id+"&type="+this.activeChangeset.type:"")},activeChangeset:null,status:"incomplete",pendingXHR:null,initialize:function(t,e){var i=this},parse:function(t){return t.results},fetch:function(t){if(this.pendingXHR&&this.pendingXHR.abort){this.pendingXHR.abort()}t=t||{};if(t.data){t.data=_.extend(t.data,this.fetchData);this.fetchData=t.data}else{t.data=this.fetchData}this.pendingXHR=Backbone.Collection.prototype.fetch.call(this,t);return this.pendingXHR},setStatus:function(t){this.fetchData.status=t},getChangeset:function(t,e){return this.findWhere({assocId:e,assocTypeId:t})},setActiveChangeset:function(t,e){this.activeChangeset={type:t,id:e}},getActiveChangeset:function(){if(this.activeChangeset===null){return null}return this.getChangeset(this.activeChangeset.type,this.activeChangeset.id)},hasActiveChangeset:function(){return this.activeChangeset.id&&this.activeChangeset.type},removeChange:function(t,e,i){var n=this.get(t);n.removeChange(e,i)},getChange:function(t,e){var i=this.get(t);return i.getChange(e)}})})(this);
(function(e){"use strict";var t=e.Phoenix,n,r;if(!t){e.Phoenix=t={}}n=t.Wiki=t.Wiki||{};n.Models=n.Models||{};r=n.Models.Change=Backbone.Model.extend({urlRoot:"/api/wiki/change/",pendingXHR:null,url:function(){return this.urlRoot+this.id+"/"},fetch:function(e){if(this.pendingXHR&&this.pendingXHR.abort){this.pendingXHR.abort()}this.pendingXHR=Backbone.Model.prototype.fetch.call(this,e);return this.pendingXHR},parse:function(e){if(e.result){return e.result}else{return e}},toJSON:function(e){var t=Backbone.Model.prototype.toJSON.call(this,e);var r=n.Util.getFriendlyFieldName(t.fieldName);switch(t.action){case"add_association":t.changeText="Added "+r;break;case"remove_association":t.changeText="Removed "+r;break;case"create":t.changeText="New Entity";break;default:t.changeText="Edited "+r}return t},destroy:function(e,t){return Backbone.Model.prototype.destroy.call(this,e,t).done(function(){if(typeof t==="undefined"||t.noRefresh!==true){n.Instance.Entity.trigger("refresh")}})},approve:function(e){var t=this;var r={action:"approve"};if(e&&e.trim()!==""&&e!==this.get("newValue")){r.data=e}return Backbone.Model.prototype.save.call(this,r,{wait:true,error:n.Util.saveError}).done(function(){n.Instance.Entity.trigger("refresh")})},deny:function(){var e=this;return Backbone.Model.prototype.save.call(this,{action:"deny"},{wait:true,error:n.Util.saveError}).done(function(){n.Instance.Entity.trigger("refresh")})},revert:function(){return Backbone.Model.prototype.save.call(this,{action:"revert"},{wait:true,error:n.Util.saveError}).done(function(){n.Instance.Entity.trigger("refresh")})}})})(this);
(function(i){"use strict";var n=i.Phoenix,e,t;if(!n){i.Phoenix=n={}}e=n.Wiki=n.Wiki||{};e.Collections=e.Collections||{};t=e.Collections.Changes=Backbone.Collection.extend({model:e.Models.Change,pendingXHR:null,initialize:function(i,n){var e=this},fetch:function(i){if(this.pendingXHR&&this.pendingXHR.abort){this.pendingXHR.abort()}this.pendingXHR=Backbone.Collection.prototype.fetch.call(this,i);return this.pendingXHR},parse:function(i){if(i.results){return i.resuls}else{return i}}})})(this);
(function(i){"use strict";var e=i.Phoenix,n,o;if(!e){i.Phoenix=e={}}n=e.Wiki=e.Wiki||{};n.Models=n.Models||{};o=n.Models.Diff=Backbone.Model.extend({Change:null,urlRoot:"/api/wiki/change/",url:function(){return this.urlRoot+this.Change.id+"/diff/"},initialize:function(i){this.Change=i.change},fetch:function(i){if(n.Models.Diff.pendingXHR&&n.Models.Diff.pendingXHR.abort){n.Models.Diff.pendingXHR.abort()}n.Models.Diff.pendingXHR=Backbone.Model.prototype.fetch.call(this,i);return n.Models.Diff.pendingXHR},parse:function(i){var e=this;var o=null;if(i.result){o=i.result}else{o=i}o.children=new n.Collections.Diffs(o.childDiffs);if(o.wikiChange){o.changes=new n.Collections.Changes(o.wikiChange.conflictingChanges)}return o}})})(this);
(function(i){"use strict";var e=i.Phoenix,n,t;if(!e){i.Phoenix=e={}}n=e.Wiki=e.Wiki||{};n.Collections=n.Collections||{};t=n.Collections.Diffs=Backbone.Collection.extend({Changeset:null,model:n.Models.Diff,pendingXHR:null,urlRoot:"/api/wiki/changeset/",url:function(){return this.urlRoot+this.Changeset.id+"/diff/"},initialize:function(i){if(i&&i.changeset){this.Changeset=i.changeset}},fetch:function(i){if(this.pendingXHR&&this.pendingXHR.abort){this.pendingXHR.abort()}this.pendingXHR=Backbone.Collection.prototype.fetch.call(this,i);return this.pendingXHR},parse:function(i){if(i.result){return i.result}else{return i}}})})(this);
(function(t){"use strict";var e=t.Phoenix,i,n;if(!e){t.Phoenix=e={}}i=e.Wiki=e.Wiki||{};i.Models=i.Models||{};n=i.Models.Association=Backbone.Model.extend({url:function(){if(typeof this.getAssociated().id==="undefined"){return this.baseUrl+"/"}else{return this.baseUrl+"/"+this.getAssociated().id+"/"}},pendingXHR:null,ChangeId:null,blacklist:["baseUrl","id","association"],initialize:function(t){this.baseUrl=t.baseUrl;this.id=t.id},fetch:function(t){if(this.pendingXHR&&this.pendingXHR.abort){this.pendingXHR.abort()}this.pendingXHR=Backbone.Model.prototype.fetch.call(this,t);return this.pendingXHR},parse:function(t){var e=null;if(t.result){e=t.result}else{e=t}if(e.submitter){if(i.Instance&&i.Instance.Changesets&&i.Instance.Entity){_.each(e.changes,function(t,e){i.Instance.Entity.addPendingChange(t.fieldName,t)});i.Instance.Changesets.set(e,{remove:false})}return}else{return e}},saveError:function(t,e,n){var s=this;var r=i.Util.saveError(t,e,n);if(r.action==="remove_association"){var a=confirm("This entity already has the association you are trying to add, do you want to remove this association?");if(a){s.destroy()}}},save:function(t,e){e=e||{};var i=_.omit(_.extend(t,this.changedAttributes()),this.blacklist);var n=this.changedAttributes()?true:false;if(_.isEmpty(i)){e.data=null}return Backbone.Model.prototype.save.call(this,i,_.extend({wait:true,patch:n,error:_.bind(this.saveError,this)},e))},destroy:function(t){return Backbone.Model.prototype.save.call(this,{},_.extend({wait:true,error:_.bind(this.saveError,this),type:"DELETE"},t))},update:function(t,e,i){var n=this.set(t,e,i);this.save({},i);return n},create:function(t){this.unset("baseUrl",{silent:true});return Backbone.Model.prototype.save.call(this,{},_.extend({wait:true,type:"POST",error:_.bind(this.saveError,this)},t))},getAssociated:function(){var t=this.get("association");if(!t||Array.isArray(t)&&t.length===0){return this.toJSON()}var e=_.keys(t);return t?t[e[0]].href?t[e[1]]:t[e[0]]:null},getAssociatedOptions:function(){var t=this.get("association");if(!t){return null}var e=null;var i=_.keys(t);_.each(i,function(i,n){if(Array.isArray(t[i])){e=t[i]}});return e}})})(this);
(function(i){"use strict";var t=i.Phoenix,o,s;if(!t){i.Phoenix=t={}}o=t.Wiki=t.Wiki||{};o.Models=o.Models||{};s=o.Models.AssociationOption=o.Models.Association.extend({url:function(){var i=o.Models.Association.prototype.url.apply(this);var t=this.get("assocId");if(!t){t="stub-"+this.get("changeId")}return i+t+"/"+this.get("fieldOptionType")+"/"+(this.get("optionId")?this.get("optionId"):"0")}})})(this);
(function(e){"use strict";var t=e.Phoenix,s,i;if(!t){e.Phoenix=t={}}s=t.Wiki=t.Wiki||{};s.Collections=s.Collections||{};i=s.Collections.PagedAssociations=Backbone.Collection.extend({url:function(){return this.baseUrl+"?mode=full&"+$.param({page:this.page,count:this.perPage})},Added:null,Stubs:null,baseUrl:null,perPage:null,total:null,page:null,loaded:false,pendingXHR:null,model:s.Models.Association,initialize:function(e,t){_.bindAll(this,"parse","url","pageInfo","nextPage","previousPage");this.Added=[];this.Stubs=[]},fetch:function(e){if(this.pendingXHR&&this.pendingXHR.abort){this.pendingXHR.abort()}this.pendingXHR=Backbone.Collection.prototype.fetch.call(this,e);return this.pendingXHR},parse:function(e){var t=this;if(e.links){t.baseUrl=e.links.current.split("?")[0]}else{t.baseUrl=e.href}var i=[];var n=0;_.each(e.results,function(e){e.baseUrl=t.baseUrl;if(e.id===null){n++;t.Added.unshift(new s.Models.Association(e))}else{i.push(e)}});t.perPage=t.perPage||30;t.total=e.total-n||0;t.page=e.page||1;t.loaded=true;return i},create:function(e,t){var i=this;e=e||{};e.baseUrl=i.baseUrl;var n=new s.Models.Association(e);n.save({},{type:"POST",success:function(){i.Added.unshift(n);i.trigger("sync");s.Instance.trigger("save")}})},stubCreate:function(e){var t=this;e.baseUrl=this.baseUrl;var i=new s.Models.Association(e);i.create({success:function(e,n){i.ChangeId=n.result.newChange.id;t.Stubs.unshift(i);t.trigger("sync");s.Instance.trigger("save")}})},setStub:function(e){var t=this;var i=true;_.each(t.Stubs,function(t){if(t.ChangeId===e.id){i=false;return}});if(i){var n=new s.Models.Association({name:e.newValue});n.ChangeId=e.id;t.Stubs.unshift(n)}},update:function(e,t,i,n){var a=this;var r=new s.Models.Association({id:e,baseUrl:this.baseUrl});r.update(t,i,n)},remove:function(e,t){var i=new s.Models.Association({id:e,baseUrl:this.baseUrl});i.destroy(t)},nextPage:function(){if(!this.pageInfo().next){return false}this.page=this.page+1;return this.fetch()},previousPage:function(){if(!this.pageInfo().prev){return false}this.page=this.page-1;return this.fetch()},pageInfo:function(){if(this.models&&this.models.length>this.perPage){var e=this.models.length-this.perPage;this.total=this.total-e}var t={total:this.total,page:this.page,perPage:this.perPage,pages:Math.ceil(this.total/this.perPage),prev:false,next:false};var s=Math.min(this.total,this.page*this.perPage);if(this.total==this.pages*this.perPage){s=this.total}t.range=[(this.page-1)*this.perPage+1,s];if(this.page>1){t.prev=this.page-1}if(this.page<t.pages){t.next=this.page+1}return t},getAdded:function(){return this.Added},getStubs:function(){return this.Stubs},getByAssociatedId:function(e){return _.find(this.models,function(t){return t.getAssociated().id==e})}})})(this);
(function(e){"use strict";var t=e.Phoenix,i,n;if(!t){e.Phoenix=t={}}i=t.Wiki=t.Wiki||{};i.Models=i.Models||{};n=i.Models.Entity=Backbone.Model.extend({fetchData:{changes:"true",mode:"full"},changesetId:null,changeset:null,listName:null,urlRoot:"/api/wiki/",mode:"edit",pendingXHR:null,url:function(){this.fetchData.changes=true;var e=this.isNew()?this.urlRoot+this.listName+"/":this.urlRoot+this.type+"/"+this.id+"/";if(i.mode==="mod"){if(this.changesetId){e+="?changeset="+this.changesetId}else{this.fetchData.changes=false}}return e},initialize:function(e){var t=this;t.id=e.id;t.type=e.type;if(e.include){this.fetchData.include=e.include}this.listenTo(this,"sync",this.setPendingChanges);this.listenTo(this,"refresh",this.fetch)},parse:function(e){var t=null;if(e.result){t=e.result}else{t=e}if(t.submitter){if(i.Instance&&i.Instance.Changesets){t.isNew=true;i.Instance.Changesets.set(t,{remove:false})}return}else{var n=_.map(t,function(e,n){if(e!==null&&(e.count!==undefined||e.href!==undefined)){t[n]=new i.Collections.PagedAssociations(e,{parse:true})}});return t}},fetch:function(e){if(this.pendingXHR&&this.pendingXHR.abort){this.pendingXHR.abort()}e=e||{};if(e.data){e.data=_.extend(e.data,this.fetchData);this.fetchData=e.data}else{e.data=this.fetchData}if(this.id){this.pendingXHR=Backbone.Model.prototype.fetch.call(this,e)}return this.pendingXHR},update:function(e,t,i,n){var s=this;var a;if(typeof e==="object"){a=e;n=i;i=t;t=null}else{(a={})[e]=t}_.mapObject(a,function(e,t){s.addPendingChange(t,e,false)});s.set(a,i);return s.save({},n)},save:function(e,t){if(this.changedAttributes()||t&&t.force){return Backbone.Model.prototype.save.call(this,_.extend(this.changedAttributes(),e),_.extend({patch:true,wait:true,success:this.saveSuccess,error:this.saveError},t))}return false},addPendingChange:function(e,t,i){var n=this.get("pendingChanges")||[];if(n[e]===undefined){n[e]=[t]}else{var s=false;_.each(n[e],function(e,i){if(e!==null&&e.id===t.id){s=true;return}});if(!s){n[e].push(t)}}if(i){this.trigger("change")}},addInclude:function(e){if(!this.fetchData.include){this.fetchData.include=e}else if(this.fetchData.include.indexOf(e)<0){this.fetchData.include+=","+e}},getChangesetId:function(){return this.changesetId},setChangeset:function(e){if(this.changesetId!==e||this.mode!==i.mode){this.mode=i.mode;this.changesetId=e}},deleteChange:function(e){var t=i.Instance.Changesets.getActiveChangeset();if(t&&e){var n=t.getChangeByField(e);if(!n){return}t.removeChange(n.id)}},saveError:function(e,t,n){var s=e.changedAttributes();if(s){var a=_.keys(s);var h=_.pick(e.previousAttributes(),a)}if(t.status===432&&s&&a[0]){e.deleteChange(a[0])}i.Util.saveError(e,t,n);if(s){e.set(h)}},saveSuccess:function(e,t,n){i.Instance.trigger("save")}})})(this);
(function(e){"use strict";var t=e.Phoenix,n,i;if(!t){e.Phoenix=t={}}n=t.Wiki=t.Wiki||{};n.Models=n.Models||{};i=n.Models.ModerationEntity=n.Models.Entity.extend({approvedChanges:0,deniedChanges:0,pendingChanges:0,initialize:function(e){n.Models.Entity.prototype.initialize.apply(this,arguments);this.stopListening(this);this.listenTo(this,"refresh",this.refresh)},setChangeset:function(e){n.Models.Entity.prototype.setChangeset.apply(this,arguments);this.approvedChanges=e.getParentsByStatus("approved").length;this.deniedChanges=e.getParentsByStatus("denied").length;this.pendingChanges=e.getParentsByStatus("pending").length+e.getParentsByStatus("reverted").length},update:function(e,t){if(_.isObject(this.changesetId)){var i=this.changesetId.getChangeByField(e);if(!t){t=null}if(i.get("status")==="pending"||i.get("status")==="reverted"){n.Instance.Hud.changeAction(i.id,"approvedChanges","approve","change-approved",t)}}},checkGlobalButtonStatus:function(){if(this.pendingChanges<=0){n.Instance.Hud.disableGlobalModerationButtons()}else{n.Instance.Hud.enableGlobalModerationButtons()}}})})(this);
(function(e){"use strict";var t=$(document),i=e.Phoenix,n,s;if(!i){e.Phoenix=i={}}n=i.Wiki=i.Wiki||{};s=n.Views=n.Views||{};s.Core=Backbone.View.extend({Hud:null,Edit:null,Create:null,Entity:null,Changesets:null,subEls:null,templates:null,selectors:null,mode:null,status:null,changeset:null,change:null,isMod:false,section:"edit",hudRender:function(){},initialize:function(e){var t=this,i;t.subEls=e.subEls;t.templates=e.templates;t.selectors=e.selectors;t.isMod=e.isMod;t.section=e.section;i=t.Changesets=new n.Collections.Changesets;if(e.entityId&&e.entityType){var a=t.selectors.includes.find("[name]").map(function(e,t){return $(t).attr("name").match(/\[(\w+)\]/)[1]}).toArray().join(",");switch(t.section){case"edit":t.Entity=new n.Models.Entity({type:e.entityType,id:e.entityId,include:a});break;case"moderation":t.Entity=new n.Models.ModerationEntity({type:e.entityType,id:e.entityId,include:a});t.Hud=new s.ModerationHud({el:t.subEls.moderationSubmissionContainer,containers:t.subEls,templates:t.templates,changesets:i,entity:t.Entity})}i.setActiveChangeset(e.entityType,e.entityId);t.Edit=new s.Edit({el:t.subEls.form,entity:t.Entity,selectors:t.selectors,templates:t.templates,changesets:i});t.Entity.bind("reset add remove change",_.bind(t.Edit.render,t.Edit));t.Entity.bind("sync",_.bind(t.checkChangeset,t));t.bind("save",_.bind(t.editStart,t))}else{switch(t.section){case"edit":t.Create=new s.Create({el:t.subEls.form,templates:t.templates,changesets:i});break;case"moderation":t.Entity=new n.Models.ModerationEntity({});t.Hud=new s.ModerationHud({el:t.subEls.moderationSubmissionContainer,containers:t.subEls,templates:t.templates,changesets:i,entity:t.Entity});t.Edit=new s.Edit({el:t.subEls.form,entity:t.Entity,selectors:t.selectors,templates:t.templates,changesets:i})}}i.bind("reset add remove change",_.bind(t.reRender,t));if(!t.Hud){t.Hud=new s.Hud({el:t.subEls.hud,containers:t.subEls,templates:t.templates,changesets:i,entity:t.Entity})}},reRender:function(){this.hudRender()},needsFetch:function(e,t,i,s){var a=false;if(this.mode!=e||this.status!=t){a=true}else if(e==="mod"&&i!=this.changeset){a=true}n.mode=this.mode=e;n.status=this.status=t;this.changeset=i;this.change=s;return a},defaultView:function(){this.toggleEditing(false)},changeView:function(e,t,i,s){var a=this;a.toggleEditing(true);a.Entity.setChangeset(i);a.Changesets.setStatus(t);var r=a.needsFetch(e,t,i,s);a.hudRender=function(){a.Hud.selectChange(i,s)};if(r){a.Entity.fetch({error:n.Util.saveError});a.Changesets.fetch({error:n.Util.saveError})}else{a.hudRender()}},changesetView:function(e,t,i){var s=this;s.toggleEditing(true);s.Entity.setChangeset(i);s.Changesets.setStatus(t);var a=s.needsFetch(e,t,i);s.hudRender=function(){s.Hud.selectChangeset(i)};if(a){s.Entity.fetch({error:n.Util.saveError});s.Changesets.fetch({error:n.Util.saveError})}else{s.hudRender()}},changesetModView:function(e){var t=this;var i=this.Changeset=new n.Models.Changeset({id:e});this.Changeset.fetch({error:n.Util.saveError}).then(function(){var e=new n.Collections.Diffs({changeset:i});e.fetch({error:n.Util.saveError}).then(function(e){delete e.result["children"];_.forEach(e.result,function(e){var i=t.Changeset.getChange(e.wikiChange.id);if(i){i.set("diff",e)}});if(t.Entity.id){t.Entity.fetch({error:n.Util.saveError}).then(function(){t.Entity.setChangeset(t.Changeset);t.Hud.setEditView(t.Edit);t.Hud.renderModerationSubmissionPage(t.Entity.changesetId,true);t.Edit.render()})}else{t.Entity.setChangeset(t.Changeset);t.Hud.setEditView(t.Edit);t.Hud.renderModerationSubmissionPage(t.Entity.changesetId,true);t.Edit.render()}})})},statusView:function(e,t){var i=this;i.toggleEditing(true);i.Changesets.setStatus(t);var s=i.needsFetch(e,t);if(s){i.hudRender=function(){i.Hud.selectByStatus(t)};i.Entity.fetch({error:n.Util.saveError});i.Changesets.fetch({success:_.bind(i.hudRender,this),error:n.Util.saveError})}else{i.hudRender=function(){i.Hud.selectByStatus(t)};i.hudRender()}},toggleEditing:function(e){if(e){$("body").addClass("wiki-editing");$("#site .container, header.container").removeClass("container").addClass("container-fluid")}else{$("body").removeClass("wiki-editing");$(".container-fluid").removeClass("container-fluid").addClass("container")}$(window).trigger("resize")},getChangeset:function(e){var t=this,i;return t.Changesets.get(e)},checkChangeset:function(){if(this.mode==="edit"&&!this.changeset&&this.Changesets&&this.Changesets.getActiveChangeset()){this.changeset=this.Changesets.getActiveChangeset().id;Backbone.history.navigate("wiki/"+this.mode+"/"+this.status+"/"+this.changeset,true)}},editStart:function(){Backbone.history.navigate("wiki/edit/incomplete",true);this.checkChangeset()},showLoader:function(e,t,i){var n=this;if(i&&i.url.indexOf("api/wiki")===-1){return}var s=$(this.Hud.$el);if(s.hasClass("js-wiki-moderation-container")){return}var a=$(e.currentTarget.activeElement).closest("dd");var r=_.keys(i.attrs);if(r.length>0){_.each(r,function(e){var t=n.Edit.getSubView(e,true);if(t&&t.$view){s=s.add(t.$view)}})}else if(a.length>0){s=s.add(a)}else if(this.Hud){s=s.add(this.Hud.$el)}s.addClass("wiki-loading")},hideLoader:function(e,t,i){var n=$(this.Hud.$el);if(i&&i.url.indexOf("api/wiki")===-1){return}if(this.Edit){n=n.add(this.Edit.$el)}n=n.add($(e.currentTarget.activeElement).closest("dd"));if($.active<=1){$(".wiki-loading").removeClass("wiki-loading")}}})})(this);
(function(e){"use strict";var t=e.Phoenix,s,i,n;if(!t){e.Phoenix=t={}}s=t.Wiki=t.Wiki||{};i=s.Views=s.Views||{};n=i.Hud=Backbone.View.extend({Entity:null,Changesets:null,templates:null,containers:null,selectedChange:null,elPosition:0,scrollPosition:0,events:{"click .js-wiki-change-remove":"destroyChange","click .js-wiki-compare-close":"closeCompare","click .js-wiki-change-approve":"approveChange","click .js-wiki-change-deny":"denyChange","click .js-wiki-change-revert":"revertChange","click .js-wiki-changeset-submit":"submitChangeset","click .js-wiki-changeset-mod-comment":"commentChangeset","change .js-wiki-changeset-status":"selectChangesetStatus","change .js-wiki-mode":"selectMode"},initialize:function(e){this.Entity=e.entity;this.Changesets=e.changesets;this.templates=e.templates;this.containers=e.containers;$(window).scroll(_.bind(this.scroll,this))},render:function(){},renderChangesetList:function(e,t,i){var n=this;this.reset();var a=_.template(this.templates.hud.html());this.containers.hudHeader.html(a(this.Changesets));i=i===null?"incomplete":i;var h=_.template(this.templates.hudChangesets.html());_.each(t.models,function(t,s){t.changes=t.get("changes").toJSON();var i=t.toJSON();i.changes=i.changes.toJSON();e.append(h(i))});if(s.mode==="mod"){this.Entity.setChangeset(null)}$(".js-wiki-changeset-status").val(i);$(".js-wiki-mode").val(s.mode);this.scroll()},renderChangeList:function(e,t){this.reset();var i=_.template(this.templates.hudChangeset.html());if((!t||t.get("changes").length===0)&&(s.mode&&s.status)){Backbone.history.navigate("wiki/"+s.mode+"/"+s.status,true);return}var n=t.toJSON();n.changes=t.get("changes").toJSON();n.hasPendingChange=t.hasPendingChange();e.html(i(n));$(".js-wiki-changeset-status").val(t.get("status"));$(".js-wiki-mode").val(s.mode);this.scroll()},renderChange:function(e,t,s,i){var n=_.template(this.templates.hudChange.html());t.html(n({diff:i}));e.addClass("wiki-compare");this.scrollPosition=$(window).scrollTop();this.containers.wrapper.hide();if(i.get("wikiChange").fieldType==="text"){this.$el.find(".field-view-content").addClass("content-body");this.$el.find(".js-lazy-load-image").unveil({threshold:Number.MAX_VALUE,checkHidden:false});this.$el.find(".js-lazy-load-video").unveil({threshold:Number.MAX_VALUE,mode:"all",checkHidden:false});var a=this.$el.find(".text-add, .text-delete");a=a.filter(function(){return $(this).text()&&!($(this).next().hasClass("text-add")||$(this).next().hasClass("text-delete"))});if(a.length>0){var h=this.$el.find(".wiki-diff-change-controls");h.removeClass("hide");var o=h.find(".js-wiki-diff-nav");var r=h.find(".wiki-diff-change-text");r.text(a.length+" changes");var c=-1;o.on("click",function(){c=$(this).data("action")==="next"?c+1:c-1;if(c<0){c=a.length-1}else if(c>a.length-1){c=0}var e=$(a[c]);$(".wiki-compare-diff").scrollTo(e);r.text("Change "+(c+1)+" of "+a.length)})}}this.scroll()},reset:function(){if(this.elPosition<=0){this.elPosition=$("#masthead").height()}this.containers.hud.removeClass("wiki-compare");this.containers.hudChangesets.html("");this.containers.hudCompare.html("");this.containers.hudHeader.html("");$(".js-wiki-mode").val(s.mode)},selectChangesetForCurrentEntity:function(e){var t=this.Changesets.getActiveChangeset();if(t){Backbone.history.navigate("wiki/"+s.mode+"/"+s.status+"/"+t.id,true)}else{selectByStatus(e)}},selectChangeset:function(e){this.closeCompare();if(s.mode==="mod"&&this.Changesets.get(e)){this.Entity.setChangeset(e)}else{this.Entity.setChangeset(null)}this.renderChangeList(this.containers.hudChangesets,this.Changesets.get(e))},selectChange:function(e,t){if(this.selectedChange!==null&&this.selectedChange.get("id")==t){return}var i=this.Changesets.get(e);if(!i){return this.renderChangesetList(this.containers.hudChangesets,this.Changesets,null)}this.renderChangeList(this.containers.hudChangesets,i);var n=this.selectedChange=this.Changesets.getChange(e,t);if(!n){return this.selectChangeset(e)}if(n.get("assocTypeId")){var a=new s.Models.Diff({change:n});a.bind("sync",_.bind(this.renderChange,this,this.containers.hud,this.containers.hudCompare,n,a));a.fetch({error:s.Util.saveError})}},selectByStatus:function(e){this.closeCompare();this.renderChangesetList(this.containers.hudChangesets,this.Changesets,e)},deselectChange:function(){if(!this.selectedChange){return}var e=this.selectedChange.get("changesetId");this.closeCompare();Backbone.history.navigate("wiki/"+s.mode+"/"+s.status+"/"+e,true)},approveChange:function(e){this.selectedChange.approve();this.deselectChange()},denyChange:function(e){this.selectedChange.deny();this.deselectChange()},revertChange:function(e){this.selectedChange.revert();this.deselectChange()},closeCompare:function(e){this.selectedChange=null;this.containers.wrapper.show();if(this.scrollPosition){$(window).scrollTop(this.scrollPosition)}},destroyChange:function(e){var t=$(e.currentTarget);var s=t.data("change-id");var i=t.data("changeset-id");this.Changesets.removeChange(i,s);this.containers.hudCompare.html("")},submitChangeset:function(e){var t=$(e.currentTarget);var s=t.data("id");var i=this.Changesets.get(s);var n=$("#js-wiki-changeset-comment").val();i.submit(n,{success:_.bind(this.submitSuccess,this)})},submitSuccess:function(e){this.Entity.fetch({error:s.Util.saveError});this.Changesets.fetch({error:s.Util.saveError});$("#js-wiki-conf").modal("show")},commentChangeset:function(e){var t=$(e.currentTarget);var s=t.data("id");var i=this.Changesets.get(s);var n=$("#js-wiki-changeset-comment").val();var a=$("#js-wiki-changeset-additional-points").val();i.comment(n,a,{success:_.bind(this.commentSuccess,this)})},commentSuccess:function(e){Backbone.history.navigate(s.mode+"/done",true)},selectChangesetStatus:function(e){var t=$(e.currentTarget);var i=t.val();Backbone.history.navigate("wiki/"+s.mode+"/"+i,true)},selectMode:function(e){var t=$(e.currentTarget);var s=t.val();if(s==="mod"){Backbone.history.navigate("wiki/"+s+"/pending",true)}else{Backbone.history.navigate("wiki/"+s+"/incomplete",true)}},scroll:function(e){var t=$(window).scrollTop();if(t>this.elPosition){this.$el.addClass("fixed")}else{this.$el.removeClass("fixed")}},showLoader:function(){this.$el.addClass("wiki-loading")},hideLoader:function(){this.$el.removeClass("wiki-loading")}})})(this);
(function(e){"use strict";var n=e.Phoenix,a,t,i;if(!n){e.Phoenix=n={}}a=n.Wiki=n.Wiki||{};t=a.Views=a.Views||{};var s=$(".js-mod-diff-placeholder");var o=$(".js-wiki-change-approve");var r=$(".js-wiki-change-deny");var d=$(".js-wiki-change-revert");var c=$("#change-content");var h=$(".js-moderator-comment-textbox");var g=$(".js-moderator-comment-textbox-select");var l=$(".js-bonus-points");var u=$(".js-moderator-comment-to-user");var v=".js-wiki-change-approve-all";var f=".js-wiki-change-deny-all";var p=".js-wiki-view-control, .js-wiki-edit-control";var m=$(".wiki-loading-container");i=t.ModerationHud=t.Hud.extend({diffTemplate:null,EditView:null,events:function(){return _.extend({},t.Hud.prototype.events,{"click .js-wiki-change-approve-all":"approveAllChanges","click .js-wiki-change-deny-all":"denyAllChanges","change .js-moderator-comment-textbox-select":"commentOptionSelected","click .js-moderator-comment-submit":"commentTextBoxSubmit"})},initialize:function(e){t.Hud.prototype.initialize.apply(this,arguments);this.diffTemplate=_.template(e.templates.diffTemplate.html());a.mode="mod"},setEditView:function(e){this.EditView=e},renderModerationSubmissionPage:function(e,n){var t=this;_.each(s,function(e){var n=a.Instance.Changeset.getChange(e.getAttribute("data-change-id"));if(n&&n.get("diff")){var i=n.get("diff");$(e).html(t.diffTemplate({diff:i}))}});var i=_.template(this.templates.moderationSubmission.html());var o={};o.changeset=e.toJSON();t.renderFuzzyDates();this.containers.moderationSubmission.html(i(o));if(n){_.each(e.get("changes").models,function(e){var n=$("#"+e.id);var a=e.get("diff");if(a){n.removeClass("hide");if(a.conflict){var i=n.find(".js-wiki-conflicts");i.html(a.conflict).removeClass("hide")}}if(e.get("status")==="approved"){t.disableModerationButtonsForChange(e.get("id"));t.afterChangeActionSuccess(e.get("id"),"approvedChanges","approve","change-approved")}if(e.get("status")==="denied"){t.disableModerationButtonsForChange(e.get("id"));t.afterChangeActionSuccess(e.get("id"),"deniedChanges","deny","change-denied")}});a.Instance.Entity.checkGlobalButtonStatus()}c.show();$(".js-lazy-load-image").unveil({threshold:Number.MAX_VALUE,checkHidden:false})},renderFuzzyDates:function(){var e=this;$(".js-fuzzy-date").each(function(){$(this).wikiDateDisplay();var e=$(this).parents(".submission-change-row").data("field");var n=$(".submission-change-row[data-field="+e+"Type");if(n.length>0){n.addClass("hide")}})},changeAction:function(e,n,t,i,s){var o=this;var r=$("#"+n);this.disableModerationButtonsForChange(n);if(r.hasClass("change-error")){r.removeClass("change-error")}r.addClass("change-pending");e[i]().success(function(){o.afterChangeActionSuccess(n,t,i,s);a.Instance.Entity[t]++;a.Instance.Entity.pendingChanges--;o.renderModerationSubmissionPage(a.Instance.Changeset,false);a.Instance.Entity.checkGlobalButtonStatus()}).error(function(){r.removeClass("change-pending");r.addClass("change-error");o.enableModerationButtonsForChange(n)})},afterChangeActionSuccess:function(e,n,a,t){var i=this;var s=$("#"+e);s.removeClass("change-pending");s.addClass(t);s.siblings("[data-parent-id="+e+"]").removeClass("change-pending").addClass(t);if(a==="approve"){i.revertButtonStatus(e,"show")}},disableModerationButtonsForChange:function(e){var n=o.add(r);var t=a.Instance.Changeset.getChange(e);if(n.length>0){_.each(n,function(n){n=$(n);var a=n.parent();if(n.data("change-id")===e){a.hide()}});$("[id*="+t.get("fieldName")+"]").find(p).hide()}},enableModerationButtonsForChange:function(e){var n=o.add(r);var t=a.Instance.Changeset.getChange(e);if(n.length>0){_.each(n,function(n){n=$(n);var a=n.parent();if(n.data("change-id")===e){a.show()}});$("[id*="+t.get("fieldName")+"]").find(p).show()}},revertButtonStatus:function(e,n){if(d.length>0){_.each(d,function(a){a=$(a);var t=a.parent();if(a.data("change-id")===e){if(t.hasClass("hide")){t.removeClass("hide")}t[n]()}})}},disableGlobalModerationButtons:function(){$(v).attr("disabled","disabled");$(f).attr("disabled","disabled")},enableGlobalModerationButtons:function(){$(v).removeAttr("disabled");$(f).removeAttr("disabled")},approveChange:function(e,n){if(!n){var t=$(e.currentTarget);n=t.data("change-id");if(!n){n=t.closest(".submission-change-row").attr("id")}}var i=a.Instance.Changeset.getChange(n);var s=this.EditView.getSubView(i.get("fieldName"),true);var o=s?s:i;this.changeAction(o,n,"approvedChanges","approve","change-approved")},denyChange:function(e,n){if(!n){var t=$(e.currentTarget);n=t.data("change-id")}var i=a.Instance.Changeset.getChange(n);var s=this.EditView.getSubView(i.get("fieldName"),true);var o=s?s:i;this.changeAction(o,n,"deniedChanges","deny","change-denied")},revertChange:function(e,n){var t=this;if(!n){var i=$(e.currentTarget);n=i.data("change-id")}var s=$("#"+n);s.removeClass("change-approved");s.addClass("change-pending");t.revertButtonStatus(n,"hide");a.Instance.Changeset.getChange(n).revert().success(function(){s.removeClass("change-pending");a.Instance.Entity.approvedChanges--;a.Instance.Entity.pendingChanges++;t.enableModerationButtonsForChange(n);t.renderModerationSubmissionPage(a.Instance.Changeset,false);a.Instance.Entity.checkGlobalButtonStatus()}).error(function(){s.removeClass("change-pending");t.revertButtonStatus(n,"show")})},approveAllChanges:function(e){var n=this;n.showLoader();var t=a.Instance.Changeset.get("changes").models;a.Instance.Changeset.approveAll(function(){_.each(t,function(e){var t=e.get("id");n.afterChangeActionSuccess(t,"approvedChanges","approve","change-approved");a.Instance.Entity["approvedChanges"]++;a.Instance.Entity.pendingChanges--;n.renderModerationSubmissionPage(a.Instance.Changeset,false);a.Instance.Entity.checkGlobalButtonStatus()});n.hideLoader()})},denyAllChanges:function(e){var n=this;n.showLoader();var t=a.Instance.Changeset.get("changes").models;a.Instance.Changeset.denyAll(function(){_.each(t,function(e){var t=e.get("id");n.afterChangeActionSuccess(t,"deniedChanges","deny","change-denied");a.Instance.Entity["deniedChanges"]++;a.Instance.Entity.pendingChanges--;n.renderModerationSubmissionPage(a.Instance.Changeset,false);a.Instance.Entity.checkGlobalButtonStatus()});n.hideLoader()})},commentOptionSelected:function(e){h.val(g.val())},commentTextBoxSubmit:function(e){var n=h.val();var t=l.val();var i=u.prop("checked");if(n){a.Instance.Changeset.comment(n,t,i,{})}},showLoader:function(){m.addClass("wiki-loading")},hideLoader:function(){m.removeClass("wiki-loading")}})})(this);
(function(e){"use strict";var t=e.Phoenix,i,s,l;if(!t){e.Phoenix=t={}}i=t.Wiki=t.Wiki||{};s=i.Views=i.Views||{};l=s.Edit=Backbone.View.extend({Entity:null,Changesets:null,FieldViews:[],$fields:null,templates:{},selectors:{},initialLoad:true,typeMapping:[{selector:".js-form-field--text",type:"TextField"},{selector:".js-form-field--textarea",type:"TextField"},{selector:".js-form-field--alias",type:"AliasField"},{selector:".js-form-field--select",type:"SelectField"},{selector:".js-form-field--select-assoc",type:"SelectAssocField"},{selector:".js-form-field--select-assoc-mult",type:"SelectAssocMultipleField"},{selector:".js-form-field--richtext",type:"WYSIWYGField"},{selector:".js-form-field--autocomplete",type:"AutocompleteField"},{selector:".js-form-field--autocomplete-single",type:"AutocompleteSingleField"},{selector:".js-form-field--autocomplete-options",type:"AutocompleteOptionsField"},{selector:".js-form-field--autocomplete-option",type:"AutocompleteOptionField"},{selector:".js-form-field--date",type:"DateField"},{selector:".js-form-field--fuzzy-date",type:"FuzzyDateField"},{selector:".js-form-field--image",type:"ImageField"}],initialize:function(e){this.Entity=e.entity;this.Changesets=e.changesets;this.$fields=this.$el.find(".js-form-field");this.templates=e.templates;this.selectors=e.selectors},render:function(){if(this.selectors.title&&this.Entity){this.selectors.title.text(this.Entity.get("name"))}this.renderSubViews();$(window).scroll()},renderSubViews:function(){var e=this;_.each(e.typeMapping,function(t,s){var l=e.$fields.filter(t.selector);if(l.length>0){l.each(function(s,l){var o=$(l);var n=o.parents(".wiki-item-edit");var r=o.parent().data();var a=o.find("[name]").attr("name");var d=e.getSubView(a);if(d===null){var c=_.extend(r,{entity:e.Entity,el:n,templates:e.templates,changesets:e.Changesets});d=new i.Views[t.type](c);e.FieldViews.push({fieldName:a,view:d})}var f=d.getValue();if(f&&f.bind&&!f.hasEvent){f.bind("sync",_.bind(d.render,d));f.hasEvent=true}d.render();if(i.Instance.section!=="moderation"&&i.Instance.isMod&&e.initialLoad&&d.options.clickToOpen!==true){d.editMode(false)}})}});e.initialLoad=false},getSubView:function(e,t){for(var i=0;i<this.FieldViews.length;i++){var s=this.FieldViews[i].fieldName;if(t){s=s.replace(/.*\[(.*)\]/g,"$1")}if(s===e){return this.FieldViews[i].view}}return null},showLoader:function(){this.$el.addClass("wiki-loading")},hideLoader:function(){this.$el.removeClass("wiki-loading")}})})(this);
(function(e){"use strict";var t=e.Phoenix,i,a,n;if(!t){e.Phoenix=t={}}i=t.Wiki=t.Wiki||{};a=i.Views=i.Views||{};n=a.Create=Backbone.View.extend({Entity:null,Changesets:null,templates:{entityQuickCreateTemplate:$("#js-wiki-entity-create-template")},selectors:{entityQuickCreateContainer:$("#js-quick-create"),imageWidgetContainer:$(".image-widget-container"),imageWidget:$(".image-widget"),confirmDialogModal:$("#js-wiki-conf")},events:{"click #js-save-create":"create","click .js-redirect-button":"closeModal"},initialize:function(e){this.Changesets=e.changesets;this.Entity=new i.Models.Entity({});this.templates=$.extend(this.templates,e.templates);this.selectors=$.extend(this.selectors,e.selectors);this.Entity.listName=this.selectors.entityQuickCreateContainer.data("entity-type")},create:function(e){var t=$("#quick-create-form");var i=$("#js-save-create");var a={};var n=this;if(t[0].checkValidity()){e.preventDefault();i[0].setAttribute("disabled","disabled");t.find(":input").each(function(){var e=$(this);var t=$(this).val();if(e.data("ignore")||t.length===0){return}var i=e.attr("name");if(i!==undefined){i=i.match(/\[(.*?)]/)[1];if(e.hasClass("datepicker-type-input")){i=i+"Type"}if(i.indexOf("][")&&t.indexOf("-")!==-1&&t.split("-")[0].length===4){t=t.split("-")[1]}if(a[i]!==undefined){t=a[i]+","+t}a[i]=t}});this.Entity.update(a,{},{force:true}).success(function(e){var t=n.Changesets.get(e.result.id);if(t){t.submit().success(function(){n.afterCreate();n.selectors.confirmDialogModal.modal("show")})}}).error(function(){i[0].removeAttribute("disabled")})}},closeModal:function(){this.selectors.confirmDialogModal.modal("hide")},afterCreate:function(){var e=$("#quick-create-form");var t=$("#js-save-create");var a=$(".image-widget-container");var n=$(".image-widget");if(e.data("reset")!==false){e[0].reset();e.find("input[type=hidden]").each(function(){this.value=""})}if(n.find(":not(.hide)")){n.find(":not(.hide)").remove();a.find("a").removeClass("hide")}t[0].removeAttribute("disabled");this.Entity=new i.Models.Entity({});this.Entity.listName=this.selectors.entityQuickCreateContainer.data("entity-type")}})})(this);
(function(e){"use strict";var i=e.Phoenix,t,s,n;if(!i){e.Phoenix=i={}}t=i.Wiki=i.Wiki||{};s=t.Views=t.Views||{};n=s.BaseField=Backbone.View.extend({Entity:null,Changesets:null,templates:null,viewTemplate:null,editTemplate:null,controls:".js-wiki-view-control, .js-wiki-edit-control",$field:null,$label:null,$value:null,$edit:null,$view:null,$help:null,$error:null,$viewElements:null,$editElements:null,renderHTML:false,dirty:false,fieldName:null,options:{mode:"view"},events:{"dblclick .form-field-view ":"editMode","click .js-wiki-edit-field":"editMode","click .js-wiki-destroy-field":"destroy","click .js-wiki-deny-field":"deny","click .js-wiki-approve-field":"approve","click .js-wiki-save-field":"save","click .js-wiki-close-field":"cancel",keypress:"checkSave"},initialize:function(e){_.extend(this.options,e);this.$viewElements=$();this.$editElements=$();this.Entity=e.entity;this.Changesets=e.changesets;this.templates=e.templates;this.viewTemplate=this.viewTemplate||_.template(e.templates.fieldView.html());this.editTemplate=this.editTemplate||_.template(e.templates.fieldEdit.html());this.$field=this.$field||this.$el.find("[name]");this.name=this.name||this.$field.attr("id");this.fieldName=this.fieldName||PhoenixUtils.snakeToCamel(this.$field.attr("name").match(/\[(\w+)\]/)[1]);this.$label=$("#js-field-label--"+this.name);this.$value=$("#js-field-value--"+this.name);this.$help=$("#js-field-help--"+this.name);this.$error=$("#js-field-error--"+this.name);this.$editElements=this.$editElements.add(this.$value).add(this.$error);if(this.Entity instanceof t.Models.ModerationEntity){this.renderHTML=true}},render:function(){if(this.dirty){return}var e=this.getPendingChange()!==null;if(this.$view){this.$view.remove()}if(this.$edit){this.$edit.remove()}this.$edit=$(this.editTemplate());this.$value.prepend(this.$edit);this.$view=$(this.viewTemplate({renderHTML:this.renderHTML,val:this.getDisplayValue(),hasChange:e,name:this.name,fieldName:this.fieldName}));this.$value.after(this.$view);this.$viewElements=this.$viewElements.add(this.$view);this.$view.find(this.controls).removeClass("hide");this.$edit.find(this.controls).removeClass("hide");this.changeMode(this.options.mode);this.delegateEvents()},changeMode:function(e){switch(e){case"edit":this.$viewElements.hide();this.$editElements.addClass("wiki-edit-show");this.$field.trigger("edit");break;case"view":this.$editElements.removeClass("wiki-edit-show");this.$viewElements.show();this.$field.trigger("view");break;default:}},editMode:function(e){var e=e||false;if(t.mode==="edit"||t.status==="pending"&&this.getPendingChange()!==null||t.mode==="mod"){this.changeMode("edit");if(this.$field&&e){this.$field.focus()}this.dirty=true}},viewMode:function(){this.changeMode("view")},getPendingChange:function(){var e=this.Entity.get("pendingChanges");var i=e?e[this.fieldName]:null;return i===undefined?null:i},getChange:function(e){var i=this.Entity.getChangesetId();var t=null;if(i!==null){if(_.isObject(i)){t=i}else{t=this.Changesets.get(i)}}else{t=this.Changesets.getActiveChangeset()}var s=null;if(t){s=t.getChangeByField(this.fieldName,e)}return s},getDisplayValue:function(){if(this.Entity instanceof t.Models.ModerationEntity){return this.getModerationDisplayValue()}return this.getValue()},getValue:function(){if(this.Entity instanceof t.Models.ModerationEntity){return this.getModerationValue()}return this.Entity.get(this.fieldName)},getModerationValue:function(){var e=this.getChange();if(e&&e.get("fieldName")===this.fieldName&&e.has("diff")){return e.get("diff").wikiChange.newValue}else{return this.Entity.get(this.fieldName)}},getModerationDisplayValue:function(){var e=this.getChange();if(e&&e.get("fieldName")===this.fieldName&&e.has("diff")){return e.get("diff").diff}else{return this.Entity.get(this.fieldName)}},getEditorValue:function(){return this.$field.val()},destroy:function(){this.dirty=false;var e=this.getChange();if(e){this.Entity.set(this.fieldName,null);return e.destroy()}},approve:function(){var e=this.getChange();if(this.dirty){this.dirty=false;return e.approve(this.getEditorValue())}else{return e.approve()}},deny:function(){this.dirty=false;var e=this.getChange();return e.deny()},save:function(){this.dirty=false;this.Entity.update(this.fieldName,this.getEditorValue());this.viewMode()},cancel:function(){this.viewMode()},checkSave:function(e){if(e.which===13&&e.ctrlKey){this.save()}}})})(this);
(function(e){"use strict";var i=e.Phoenix,t,a,s;if(!i){e.Phoenix=i={}}t=i.Wiki=i.Wiki||{};a=t.Views=t.Views||{};s=a.BaseAssociation=t.Views.BaseField.extend({valTemplate:null,renderHTML:true,controls:".js-wiki-edit-field, .js-wiki-close-field",pendingAssociations:[],options:{mode:"view",eagerLoad:true,keepOpen:false},events:{"click a.js-next":"next","click a.js-prev":"previous","click a.js-wiki-fetch-field":"fetch","click a.js-wiki-assoc-remove":"remove","click a.js-wiki-assoc-destroy":"destroy","change textarea":"inputChanged"},initialize:function(e){_.extend(this.events,t.Views.BaseField.prototype.events);this.valTemplate=_.template(e.templates.associationView.html());if(e.itemTemplate){this.valTemplateItem=_.template($(e.itemTemplate).html())}else{this.valTemplateItem=_.template(e.templates.associationViewItem.html())}this.pendingAssociations=[];t.Views.BaseField.prototype.initialize.call(this,e);if(!this.options.eagerLoad){this.controls+=", .js-wiki-fetch-field"}this.Changesets.bind("sync",_.once(_.bind(this.markPendingChanges,this)))},render:function(){this.setupStubs();t.Views.BaseField.prototype.render.call(this);this.markPendingChanges();this.renderFormElement()},renderFormElement:function(){var e=this.$view.find(".js-wiki-add-empty");if(e.length>0&&e.css("display")!=="none"){this.$view.find(".js-wiki-add-existing").hide()}else if(!this.$editElements.hasClass("wiki-edit-show")){this.$view.find(".js-wiki-add-existing").show();this.$view.find(this.controls).find(".icon-pencil").removeClass("icon-pencil").addClass("icon-plus")}},changeMode:function(e){if(this.options.keepOpen){e="edit";this.options.keepOpen=false}t.Views.BaseField.prototype.changeMode.call(this,e);switch(e){case"edit":this.$viewElements.show();break;case"view":break;default:}},editMode:function(e){t.Views.BaseField.prototype.editMode.call(this,e);this.dirty=false},setupStubs:function(){var e=this;var i=this.getPendingChange();_.each(i,function(i,t){if(i.action=="create"){e.addStubAssociation(i)}})},markPendingChanges:function(){var e=this;var i=this.getPendingChange();var t=this.Changesets.getActiveChangeset();_.each(i,function(i,a){e.applyEditAssociationChanges(i,t);var s="";switch(i.action){case"add_association":s="wiki-assoc-added";break;case"remove_association":s="wiki-assoc-removed";e.$view.find("textarea[data-id="+i.newValue+"]").attr("disabled","disabled");break;case"edit_association":s="wiki-assoc-edited";break;case"create":s="wiki-assoc-created";break}var n=isNaN(i.newValue)?0:i.newValue;e.$view.find("span[data-id="+n+"]").parent().addClass(s);e.$view.find("a[data-id="+n+"], a[data-change-id="+i.id+"]").removeClass("icon-minus-sign").addClass("icon-trash").data("pending-change",true)})},applyEditAssociationChanges:function(e,i){if(!e||!i){return}var t=this;var a=i.getChildren(e.id);_.each(a,function(i){if(e.action!="create"){var a=t.$view.find("[name="+i.get("fieldName")+"][data-id="+e.newValue+"]");if(!a.is(":focus")){a.val(i.get("newValue"))}}})},getDisplayValue:function(){var e=this;var i=e.getValue();if(!i){return null}var t=i.getAdded();var a=i.getStubs();return e.valTemplate({renderSub:e.valTemplateItem,pageInfo:i.pageInfo(),associations:i.models,pending:t,stubs:a})},fetch:function(){this.getValue().fetch();this.Entity.addInclude(this.fieldName)},remove:function(e){var i=$(e.currentTarget);var a=this;if(i.data("pending-change")){this.destroy(e)}else{this.getValue().remove(i.data("id"),{success:function(){t.Instance.trigger("save");a.render()}})}},destroy:function(e){this.pendingAssociations=[];var i=$(e.currentTarget);var t=this.getChange(i.data("id"));if(t){t.destroy()}},previous:function(){this.getValue().previousPage();return false},next:function(){this.getValue().nextPage();return false},inputChanged:function(e){var i=this;var a=$(e.currentTarget);var s=a.data("id");var n=a.data("change-id");var d=a.attr("name");if(s===""){var o=new t.Models.AssociationOption({baseUrl:this.getValue().baseUrl,assocId:s,changeId:n,fieldOptionType:d});o.attributes[d]=event.target.value;var r=o.create();r.success(function(){t.Instance.trigger("save")})}else{this.getValue().update(s,d,a.val(),{success:function(){t.Instance.trigger("save");i.markPendingChanges()}})}},addStubAssociation:function(e){this.getValue().setStub(e)},addTempStubAssociation:function(){var e=this.$view.find("#js-wiki-association-stub-added");var i=this.$view.find("#js-wiki-association-count-stub-added");var t=parseInt(i[0].innerHTML);t++;i.html(t);e.removeClass("hide")}})})(this);
(function(e){"use strict";var i=e.Phoenix,t,n,s;if(!i){e.Phoenix=i={}}t=i.Wiki=i.Wiki||{};n=t.Views=t.Views||{};s=n.TextField=t.Views.BaseField.extend({autoSave:true,events:{"change input":"inputChanged","change textarea":"inputChanged","keypress input":"saveOnReturn","edit textarea":"resizeTextarea",save:"save"},initialize:function(e){_.extend(this.events,t.Views.BaseField.prototype.events);t.Views.BaseField.prototype.initialize.call(this,e)},render:function(){this.renderFormElement();return t.Views.BaseField.prototype.render.call(this)},renderFormElement:function(){if(!this.dirty&&this.$field.length>0){this.$field.val(this.getValue())}},resizeTextarea:function(e){this.$field.height(this.$field.prop("scrollHeight"))},saveOnReturn:function(e){if(e.keyCode===13){this.save();e.preventDefault()}},inputChanged:function(e){}})})(this);
(function(e){"use strict";var i=e.Phoenix,t,n,a;if(!i){e.Phoenix=i={}}t=i.Wiki=i.Wiki||{};n=t.Views=t.Views||{};a=n.AliasField=t.Views.BaseField.extend({$aliasInput:null,$itemsContainer:null,itemEditTemplate:null,itemViewTemplate:null,renderHTML:true,autoSave:true,options:{mode:"view"},events:{"change input[type=hidden]":"inputChanged"},initialize:function(e){_.extend(this.events,t.Views.BaseField.prototype.events);this.$aliasInput=this.$el.find(".js-alias-widget-input");this.name=this.$aliasInput.attr("id");this.$itemsContainer=this.$el.find(".js-alias-items");this.itemEditTemplate=this.$el.find(".edit-template");this.itemViewTemplate=this.$el.find(".view-template");t.Views.BaseField.prototype.initialize.call(this,e)},render:function(){t.Views.BaseField.prototype.render.call(this);this.renderFormElement()},renderFormElement:function(){var e=this;if(e.$field.length>0){var i=e.Entity.get(e.fieldName)||"";e.$field.val(i);var t=i.split("\n");e.$itemsContainer.html("");_.each(t,function(i,t){if(i===""){return}var n=e.itemEditTemplate.clone();n.find(".text").text(i);e.$itemsContainer.append(n.children())})}},getDisplayValue:function(){var e=this;var i="";var t=e.Entity.get(e.fieldName)||"";var n=t.split("\n");_.each(n,function(t,n){var a=e.itemViewTemplate.clone();a.find(".text").text(t);i+=a.html()});return i},inputChanged:function(e){this.dirty=false;this.Entity.update(this.fieldName,this.$field.val());this.editMode()}})})(this);
(function(e){"use strict";var i=e.Phoenix,t,s,n;if(!i){e.Phoenix=i={}}t=i.Wiki=i.Wiki||{};s=t.Views=t.Views||{};n=s.SelectField=t.Views.BaseField.extend({events:{"change select":"selectChanged"},controls:".js-wiki-view-control:not(.js-wiki-edit-change), .js-wiki-edit-control:not(.js-wiki-save-field)",initialize:function(e){_.extend(this.events,t.Views.BaseField.prototype.events);t.Views.BaseField.prototype.initialize.call(this,e);this.$field=this.$field.filter("select")},render:function(){this.renderFormElement();t.Views.BaseField.prototype.render.call(this)},renderFormElement:function(){if(this.$field.length>0){var e=this.Entity.get(this.fieldName);if(e===true||e===false){e=e?1:0}this.$field.val(e)}},getValue:function(){return this.$field.find("option:selected").text()},selectChanged:function(e){this.dirty=false;this.Entity.update(this.fieldName,this.$field.val())}})})(this);
(function(e){"use strict";var i=e.Phoenix,t,s,n;if(!i){e.Phoenix=i={}}t=i.Wiki=i.Wiki||{};s=t.Views=t.Views||{};n=s.SelectAssocField=t.Views.BaseField.extend({events:{"change select":"selectChanged"},controls:".js-wiki-view-control:not(.js-wiki-edit-change), .js-wiki-edit-control:not(.js-wiki-save-field)",initialize:function(e){_.extend(this.events,t.Views.BaseField.prototype.events);t.Views.BaseField.prototype.initialize.call(this,e);this.$field=this.$field.filter("select")},render:function(){this.renderFormElement();t.Views.BaseField.prototype.render.call(this)},renderFormElement:function(){if(this.$field.length>0){var e=this.Entity.get(this.fieldName)||null;if(isNaN(e)&&e.id){this.$field.val(e.id)}else{this.$field.val(e)}}},getValue:function(){return this.$field.find("option:selected").text()},selectChanged:function(e){this.dirty=false;this.Entity.update(this.fieldName,this.$field.val())}})})(this);
(function(e){"use strict";var i=e.Phoenix,t,s,l;if(!i){e.Phoenix=i={}}t=i.Wiki=i.Wiki||{};s=t.Views=t.Views||{};l=s.SelectAssocMultipleField=t.Views.BaseAssociation.extend({events:{"change select":"selectChanged"},initialize:function(e){_.extend(this.events,t.Views.BaseAssociation.prototype.events);t.Views.BaseAssociation.prototype.initialize.call(this,e);this.$field=this.$field.filter("select")},renderFormElement:function(){t.Views.BaseAssociation.prototype.renderFormElement.call(this);this.$field.removeAttr("multiple");if(this.$field.find("option.default").length===0){this.$field.prepend('<option selected class="default" value="">Add '+this.fieldName+"</option>")}},selectChanged:function(e){var i=$(e.currentTarget).find(":selected");if(i){var t=i.val();var s=i.text();this.dirty=false;this.getValue().create({id:t,name:s});i.removeAttr("selected");this.$field.focus();this.dirty=false;this.options.mode="edit"}}})})(this);
(function(e){"use strict";var t=e.Phoenix,i,a,s;if(!t){e.Phoenix=t={}}i=t.Wiki=t.Wiki||{};a=i.Views=i.Views||{};s=a.WYSIWYGField=i.Views.BaseField.extend({renderHTML:true,autoSave:true,events:{},initialize:function(e){_.extend(this.events,i.Views.BaseField.prototype.events);i.Views.BaseField.prototype.initialize.call(this,e);this.$textarea=this.$el.find("textarea")},render:function(){this.$el.find(".field-view-content").addClass("content-body");this.renderFormElement();i.Views.BaseField.prototype.render.call(this);this.setupLazyLoad()},renderFormElement:function(e){var e=e||false;if(this.$textarea.length>0){this.$textarea.val(this.getValue());if(e&&this.$el.find("iframe").length>0){this.$textarea.richTextEditor("focus");this.$textarea.richTextEditor().focus()}this.$el.find(".toolbar.wiki-edit").append(this.$edit)}},changeMode:function(e){i.Views.BaseField.prototype.changeMode.call(this,e);switch(e){case"edit":this.renderFormElement(true);break;case"view":break;default:}},setupLazyLoad:function(){var e=$(".js-lazy-load-image");var t=$(".js-lazy-load-video");e.unveil({threshold:$(window).height(),delay:1e3,checkHidden:false});t.unveil({threshold:1500,delay:1e3,mode:"all",checkHidden:false});e.removeClass(".js-lazy-load-image");t.removeClass(".js-lazy-load-video")},getEditorValue:function(){return this.$textarea.val()},approve:function(){this.$textarea.richTextEditor("save");window.onbeforeunload=null;return i.Views.BaseField.prototype.approve.call(this)},save:function(e){this.viewMode();this.$textarea.richTextEditor("save");this.dirty=false;this.Entity.update(this.fieldName,this.getEditorValue());window.onbeforeunload=null}})})(this);
(function(e){"use strict";var i=e.Phoenix,t,s,n;if(!i){e.Phoenix=i={}}t=i.Wiki=i.Wiki||{};s=t.Views=t.Views||{};n=s.AutocompleteField=t.Views.BaseAssociation.extend({renderFormElement:function(){var e=this;t.Views.BaseAssociation.prototype.renderFormElement.call(this);this.$field.autocomplete({onItemSelect:_.bind(this.select,this),podLimit:null,showEmptyText:true,showNotificationBar:true,notificationText:"Searching for items",afterShowResults:function(i,t,s){if(e.$field.data("user-can-create")){t.find(".noResults").remove();var n=$('<li><div class="noResults add-new-object">Click here to add a new item</div>');t.append(n);n.one("click",function(){e.addNewItem()})}}})},select:function(e){var i={};if(!e.id){this.addNewItem();return}i[e.type]={name:e.name,id:e.id,image:e.image};this.getValue().create({id:e.id,association:i});this.clearField()},stubSelect:function(e){this.addTempStubAssociation();this.getValue().stubCreate(e);this.clearField()},addNewItem:function(){this.stubSelect({name:this.$field.val()})},clearField:function(){this.$field.val("");this.dirty=false;this.options.keepOpen=true}})})(this);
(function(e){"use strict";var i=e.Phoenix,t,n,l;if(!i){e.Phoenix=i={}}t=i.Wiki=i.Wiki||{};n=t.Views=t.Views||{};l=n.AutocompleteSingleField=t.Views.BaseField.extend({valTemplate:null,renderHTML:true,newValSelected:null,controls:".js-wiki-view-control, .js-wiki-close-field",options:{mode:"view",eagerLoad:true,clickToOpen:true},events:{"click .js-wiki-fetch-field":"fetch","click .js-wiki-assoc-remove":"remove"},initialize:function(e){_.extend(this.events,t.Views.BaseField.prototype.events);if(!this.options.eagerLoad){this.controls+=", .js-wiki-fetch-field"}this.valTemplate=_.template(e.templates.associationSingleView.html());t.Views.BaseField.prototype.initialize.call(this,e)},render:function(){t.Views.BaseField.prototype.render.call(this);this.renderFormElement();this.markPendingChanges()},renderFormElement:function(){this.$field.autocomplete({onItemSelect:_.bind(this.select,this),podLimit:null,showEmptyText:true,showNotificationBar:true,notificationText:"Searching for items"})},markPendingChanges:function(){},getDisplayValue:function(){var e=this.getPendingChange()!==null;var i=this.getValue();if(this.newValSelected&&typeof i!=="object"){i={};i.name=this.newValSelected;i.id=this.getValue()}else{if(typeof i==="undefined"||i&&!i.name){i=null}}return this.valTemplate({assoc:i,hasChange:e})},fetch:function(){this.getValue().fetch();this.Entity.addInclude(this.fieldName)},select:function(e){this.newValSelected=e.name;this.dirty=false;this.Entity.update(this.fieldName,e.id.toString());this.$field.val("");this.viewMode()},remove:function(e){this.dirty=false;this.Entity.update(this.fieldName,null)}})})(this);
(function(e){"use strict";var t=e.Phoenix,i,n,a;if(!t){e.Phoenix=t={}}i=t.Wiki=t.Wiki||{};n=i.Views=i.Views||{};a=n.AutocompleteOptionsField=i.Views.AutocompleteField.extend({fieldOptionsSelector:".js-field-options",events:function(){return _.extend({},i.Views.AutocompleteField.prototype.events,{"change .js-field-option":"optionSelected"})},fieldOptions:[],fieldOptionType:null,initialize:function(e){a.__super__.initialize.apply(this,arguments);this.getFieldOptionsAndType()},getDisplayValue:function(){var e=this;var t=e.getValue();if(!t){return null}var i=t.getAdded();var n=t.getStubs();return e.valTemplate({renderSub:e.valTemplateItem,pageInfo:t.pageInfo(),associations:t.models,pending:i,stubs:n,fieldOptions:this.fieldOptions,fieldOptionType:this.fieldOptionType,view:e})},getFieldOptionsAndType:function(){var e=this;var t=this.$el.find(this.fieldOptionsSelector);var i=[];$.each(t.data("options"),function(e,t){i.push({id:t,name:e})});e.fieldOptionType=t.attr("type");this.fieldOptions=i},checkIfAssociationHasOption:function(e,t){var i=false;if(t){$.each(t,function(t,n){if(n.id==e){i=true}})}return i},checkIfOptionHasChangeWithAction:function(e,t,i,n,a){var o=this;var s=false;var r=null;var c=this.Changesets.getActiveChangeset();if(c){var h=c.get("changes");if(i){var d=h.filter(function(e){var t=e.get("parentChange");return t&&t.id===i&&e.get("action").indexOf("association")>0});if(d&&d.length>0){i=d[0].get("id")}}$.each(h.models,function(a,c){if(c.get("parentChange")){if(c.get("fieldName")==o.fieldOptionType&&c.get("newValue")==e&&n.indexOf(c.get("action"))!=-1&&(t&&c.get("parentChange").newValue==t||i&&c.get("parentChange").id===i)){s=true;r=c}}})}if(a&&r!==null){return r}else{return s}},optionChecked:function(e,t){var i=t.getAssociated();var n=t.getAssociatedOptions();var a=this.checkIfOptionHasChangeWithAction(e,i.id,t.ChangeId,["add_association_option"]);var o=this.checkIfOptionHasChangeWithAction(e,i.id,t.ChangeId,["remove_association_option"]);var s=false;if(n){s=this.checkIfAssociationHasOption(e,n)}return!o&&(a||s)},optionSelected:function(e){var t=$(e.target);var n=t.closest("li").find("[data-id]").data("id");var a=t.closest("li").find("[data-change-id]").data("change-id");var o=true;var s=null;var r=new i.Models.AssociationOption({baseUrl:this.getValue().baseUrl,assocId:n,changeId:a,fieldOptionType:this.fieldOptionType,optionId:e.target.value});r.attributes[this.fieldOptionType]=e.target.value;if(t[0].checked&&this.checkIfOptionHasChangeWithAction(e.target.value,n,a,["remove_association_option"],false)){s=this.checkIfOptionHasChangeWithAction(e.target.value,n,a,["remove_association_option"],true)}if(!t[0].checked&&this.checkIfOptionHasChangeWithAction(e.target.value,n,a,["add_association_option"],false)){s=this.checkIfOptionHasChangeWithAction(e.target.value,n,a,["add_association_option"],true)}if(s){this.Changesets.removeChange(s.get("changesetId"),s.get("id"),{noRefresh:true});if(s.get("parentChange")&&s.get("parentChange").action==="association_option_parent"&&this.Changesets.getActiveChangeset().getChildren(s.get("parentChange").id).length==0){this.Changesets.removeChange(s.get("parentChange").changesetId,s.get("parentChange").id,{noRefresh:true})}o=false;i.Instance.trigger("save")}if(o){var c=$(e.target)[0].checked?r.create():r.destroy();c.success(function(){i.Instance.trigger("save")})}}})})(this);
(function(e){"use strict";var t=e.Phoenix,i,n,a;if(!t){e.Phoenix=t={}}i=t.Wiki=t.Wiki||{};n=i.Views=i.Views||{};a=n.AutocompleteOptionField=i.Views.AutocompleteOptionsField.extend({events:function(){return _.extend({},i.Views.AutocompleteField.prototype.events,{"change select":"selectChanged"})},initialize:function(e){a.__super__.initialize.apply(this,arguments);this.getFieldOptionsAndType()},selectChanged:function(e){var t=$(e.currentTarget);var n=t.data("id");var a=t.data("change-id");if(n===""){var s=this.Changesets.getActiveChangeset();var o=s.get("changes");var r=o.filter(function(e){return e.get("action")==="add_association_option"});if(r&&r.length>0){s.removeChange(r[0].get("id"),{noRefresh:true})}var c=new i.Models.AssociationOption({baseUrl:this.getValue().baseUrl,assocId:n,changeId:a,fieldOptionType:this.fieldOptionType,optionId:e.target.value});c.attributes[this.fieldOptionType]=e.target.value;var l=c.create();l.success(function(){i.Instance.trigger("save");s.fetch()})}else{this.getValue().update(n,t.attr("name"),t.val(),{success:_.bind(this.markPendingChanges,this)})}}})})(this);
(function(e){"use strict";var t=e.Phoenix,i,n,s;if(!t){e.Phoenix=t={}}i=t.Wiki=t.Wiki||{};n=i.Views=i.Views||{};s=n.DateField=i.Views.BaseField.extend({autoSave:true,events:{},initialize:function(e){_.extend(this.events,i.Views.BaseField.prototype.events);i.Views.BaseField.prototype.initialize.call(this,e)},render:function(){this.renderFormElement();return i.Views.BaseField.prototype.render.call(this)},renderFormElement:function(){if(this.$field.length>0){this.$field.val(this.getDisplayValue());this.$field.datepicker()}},getDisplayValue:function(){if(!this.getValue()){return""}var e=new Date(this.getValue());var t=e.getMonth()+1;var i=e.getDate();var n=e.getFullYear();return(t>9?t:"0"+t)+"/"+(i>9?i:"0"+i)+"/"+n},save:function(){if(!this.getEditorValue()){return}i.Views.BaseField.prototype.save.call(this)}})})(this);
(function(e){"use strict";var t=e.Phoenix,i,a,s;if(!t){e.Phoenix=t={}}i=t.Wiki=t.Wiki||{};a=i.Views=i.Views||{};s=a.FuzzyDateField=i.Views.BaseField.extend({$fuzzyDateInput:null,$fuzzyDateTypeInput:null,dateType:null,name:null,autoSave:true,options:{mode:"view"},initialize:function(e){_.extend(this.events,i.Views.BaseField.prototype.events);this.$fuzzyDateInput=this.$el.find(".datepicker-input");this.$fuzzyDateTypeInput=this.$el.find(".datepicker-type-input");this.name=this.$fuzzyDateInput.attr("id");i.Views.BaseField.prototype.initialize.call(this,e);this.dateType=this.getDateTypeValue();this.$fuzzyDateTypeInput.val(this.dateType)},render:function(){i.Views.BaseField.prototype.render.call(this);this.renderFormElement()},editMode:function(){var e=!this.getValue();var t;if(e&&this.$value.data("initial-mode")==="fuzzy"){this.dateType=1;t=1}else{t=this.getValue()}this.$fuzzyDateTypeInput.val(this.dateType);this.$field.wikiDatePicker(t,true,this.$fuzzyDateInput,this.$el.find("select"),this.$fuzzyDateTypeInput,this.$el.find("a.swap"),this.dateType,e);i.Views.BaseField.prototype.editMode.call(this)},save:function(){var e=this.$fuzzyDateTypeInput.val();var t={};if(e.length===1&&this.dateType!==e){this.dateType=parseInt(e)}this.dirty=false;this.$field.val(this.$fuzzyDateInput.val());t[this.fieldName]=this.getEditorValue();t[this.fieldName+"Type"]=this.dateType;this.Entity.update(t);this.viewMode()},renderFormElement:function(){if(this.$field.length>0){this.$field.val(this.getDisplayValue())}},getDisplayValue:function(){if(!this.getValue()){return""}var e=new Date(this.getValue());var t=e.getFullYear();var i=e.getMonth()+1;var a=["January","February","March","April","May","June","July","August","September","October","November","December"];var s=["Q1","Q2","Q3","Q4"];switch(this.dateType){case 0:var n=e.getDate();return(i>9?i:"0"+i)+"/"+(n>9?n:"0"+n)+"/"+t;break;case 1:return a[i-1]+" "+t;case 2:return s[Math.floor((i+1)/3)]+" "+t;case 3:return t}},getDateTypeValue:function(){return this.Entity.get(this.fieldName+"Type")}})})(this);
(function(e){"use strict";var i=e.Phoenix,t,s,a;if(!i){e.Phoenix=i={}}t=i.Wiki=i.Wiki||{};s=t.Views=t.Views||{};a=s.ImageField=t.Views.BaseField.extend({renderHTML:true,events:{"click .js-wiki-controls-extra-ajax":"imageAction"},initialize:function(e){_.extend(this.events,t.Views.BaseField.prototype.events);var i=this;this.fieldName="image";t.Views.BaseField.prototype.initialize.call(this,e)},render:function(){},renderFormElement:function(){if(this.$field.length>0){this.$field.val(this.getEditorValue())}},getEditorValue:function(){var e=this.getValue();var i=e.allPaths.scale_small||e.fullPath;return i},getDisplayValue:function(){return'<img src="'+this.getEditorValue()+'"/>'},imageAction:function(e){this.makeApiImageCall($(e.currentTarget).attr("href"));return false},makeApiImageCall:function(e){AjaxApiRequest.makeGetApiRequest(e,function(e){if(e.success===0){i.Ui.showErrorMessage(e.error,{});return}if(e.message){i.Ui.showSuccessMessage(e.message,{})}else if(e.error){i.Ui.showSuccessMessage(e.error,{})}})}})})(this);
(function(i){"use strict";var e=i.Phoenix,t;if(!e){i.Phoenix=e={}}t=e.Wiki=e.Wiki||{};t.Router=Backbone.Router.extend({Wiki:null,Hud:null,routes:{"":"viewDefault","wiki/:mode":"viewMode","wiki/:mode/:status":"viewChangesetsByStatus","wiki/:mode/:status/:changesetId/:changeId":"viewChange","wiki/:mode/:status/:changesetId":"viewChangeset","moderation(/)":"viewDefaultMod","moderation/:submissionId(/)":"viewModChangeset"},initialize:function(i){var e=this;e.Wiki=i.Wiki;e.Hud=i.Wiki.Hud},viewChangeset:function(i,e,t){this.Wiki.changesetView(i,e,t)},viewChange:function(i,e,t,n){this.Wiki.changeView(i,e,t,n)},viewChangesetsByStatus:function(i,e){this.Wiki.statusView(i,e)},viewMode:function(i){var e=i==="mod"?"pending":"incomplete";Backbone.history.navigate("wiki/"+i+"/"+e,{replace:true});this.Wiki.statusView(i,e)},viewDefault:function(){var i=this;var e=t.Instance.Changesets.getActiveChangeset();$("#js-wiki-conf").modal("hide");if(t.mode==="edit"&&e&&e.get("status")==="incomplete"){if(window.confirm("You have unsubmitted changes, please click the submit button in the lower left to submit your changes. Would you still like to leave?")){i.Wiki.defaultView()}else{Backbone.history.history.back()}}else{i.Wiki.defaultView()}},viewDefaultMod:function(){this.Wiki.defaultView()},viewModChangeset:function(i){this.Wiki.changesetModView(i)}})})(this);
(function(e){"use strict";var t=e.Phoenix||{},i=t.Wiki,a;var r=$(".js-wiki-container");var s={hud:$(".js-wiki-hud"),hudHeader:$(".js-wiki-hud-header"),hudChangesets:$(".js-wiki-hud .js-wiki-hud-changesets"),hudCompare:$(".js-wiki-hud .js-wiki-hud-compare"),moderationSubmissionContainer:$(".js-wiki-moderation-container"),moderationSubmission:$(".js-wiki-moderation-sub"),form:r,wrapper:r.parents("#wrapper")};var o={includes:$(".js-form-field--select-assoc-mult, .js-form-field--select-assoc, [data-eager-load=true] .js-form-field--autocomplete, [data-eager-load=true] .js-form-field--autocomplete-options, [data-eager-load=true] .js-form-field--autocomplete-option, [data-eager-load=true] .js-form-field--autocomplete-single, [data-eager-load=true] .js-form-field--select-assoc-mult, [data-eager-load=true] .js-form-field--select"),title:$(".js-entry-title"),editBtn:$(".js-wiki-edit-btn"),doneBtn:$(".js-wiki-done-btn")};var n={hud:$("#js-wiki-hud-template"),hudChangesets:$("#js-wiki-hud-changesets-template"),hudChangeset:$("#js-wiki-hud-changeset-template"),hudChange:$("#js-wiki-hud-change-template"),fieldView:$("#js-wiki-field-view-template"),fieldEdit:$("#js-wiki-field-edit-template"),associationView:$("#js-wiki-association-view"),associationViewItem:$("#js-wiki-association-view-item"),associationSingleView:$("#js-wiki-single-association-view"),moderationSubmission:$("#js-wiki-moderation-sub"),diffTemplate:$("#js-wiki-field-diff")};var d=[".*wiki/edit.*",".*wiki/mod/.*",".*wiki/moderation/\\d+/?$"];if(!i||!Backbone){return}a=i.Views;i.baseURL="/api/wiki/";i.mode="edit";i.status="incomplete";i.routerStarted=false;var u=function(e){var t={url:window.location.pathname};var i=new a.Core({el:e,subEls:s,templates:n,selectors:o,entityId:e.data("entity-id"),entityType:e.data("entity-type"),isMod:e.data("is-mod"),section:e.data("section")?e.data("section"):"edit",url:window.location,currentPage:t});return i};var c=function(e){if(i.routerStarted){return}if(Backbone.History.started){Backbone.history.stop()}e.Router=new i.Router({Wiki:e});var t="/wiki/";if(e.section==="edit"){t=window.location.pathname.replace(/(.*\/)wiki\/(edit|mod)\/.*/g,"$1")}Backbone.history.start({pushState:true,root:t});i.routerStarted=true};var l=function(){var e={};e.getFriendlyFieldName=function(e){return!e?"":e.replace(/([A-Z])/g," $1").replace(/^./,function(e){return e.toUpperCase()})};e.imageURL=function(e){if(e&&e.indexOf("http")!==0){e="//"+e}return e};e.saveError=function(e,a,r){var s="There was an unknown server error, please try again";var o={};try{o=JSON.parse(a.responseText)}catch(e){o={message:s}}if(o.message==="Validation Errors"){o.message=o.validationErrors}var n;if(typeof o.message==="object"){n=_.reduce(o.message,function(e,t,a){return e+i.Util.getFriendlyFieldName(a)+": "+t+"<br/>"},"")}else if(a.status===403){n="You don't have access to do this"}else{n=o.message||s}t.Ui.showErrorMessage(n);return o};return e};i.isWikiEditRoute=function(e){var t=false;$.each(d,function(i,a){var r=new RegExp(a);if(e&&!t&&(r.test(e)||e==="#")){t=true}});return t};i.initialize=function(){i.Util=l();i.Instance=u(r);$(document).ajaxSend(_.bind(i.Instance.showLoader,i.Instance));$(document).ajaxComplete(_.bind(i.Instance.hideLoader,i.Instance));if(i.isWikiEditRoute(window.location.href)){c(i.Instance)}$(document).on("click","a:not([data-bypass])",function(e){var t={prop:$(this).prop("href"),attr:$(this).attr("href")};if(i.isWikiEditRoute(t.attr)){c(i.Instance);e.preventDefault();Backbone.history.navigate(t.attr,true)}});$(".js-wiki-controls-extra-ajax").on("click",function(e){e.preventDefault();var i=$(e.currentTarget).attr("href");AjaxApiRequest.makeGetApiRequest(i,function(e){if(e.success===0){t.Ui.showErrorMessage(e.error,{});return}if(e.message){t.Ui.showSuccessMessage(e.message,{})}else if(e.error){t.Ui.showErrorMessage(e.error,{})}})});$(".js-delete-wiki-object").on("click",function(e){e.preventDefault();var i=$(this).attr("href");var a=$(this).data("type-id");var r=$(this).data("id");if(!confirm("This will PERMANENTLY delete this object from the wiki, are you sure you want to delete it?")){return}var s={};if(a&&r){s={typeId:a,id:r}}$.post(i,s,function(e){if(e.success===0){t.Ui.showErrorMessage(e.message);return}t.Ui.showSuccessMessage("This object has been deleted")})});window.addEventListener("beforeunload",function(e){var t="o/";var a=i.Instance.Changesets.getActiveChangeset();if(i.mode==="edit"&&Backbone.History.started&&Backbone.history.getFragment()&&a&&a.get("status")==="incomplete"){e.returnValue=t;return t}})};var f=$(document);$(i.initialize)})(this);